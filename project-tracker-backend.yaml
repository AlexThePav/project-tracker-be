AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: |
  A complete backend stack for the Project Tracker application,
  including a Lambda function, API Gateway, and DynamoDB table.

Parameters:
  LambdaCodeBucketName:
    Type: String
    Description: The name of the S3 bucket where the Lambda code will be packaged and stored.

Resources:
  # -------------------------------------------------------------------
  # AWS Lambda Function
  # -------------------------------------------------------------------
  ProjectTrackerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ProjectTrackerLambdaFunction
      Runtime: python3.13
      Handler: lambda_function.lambda_handler
      # The CodeUri property points to the local folder containing the Lambda code.
      # The 'sam package' command will bundle this folder and upload it to the S3 bucket.
      CodeUri: ./src/
      Policies:
        # Grants basic execution and log-writing permissions.
        - AWSLambdaBasicExecutionRole
        # Grants full CRUD permissions for the DynamoDB table.
        - DynamoDBCrudPolicy:
            TableName: !Ref ProjectsTable
      # CRITICAL: This environment block passes the DynamoDB table name to the Lambda function.
      Environment:
        Variables:
          PROJECTS_TABLE_NAME: !Ref ProjectsTable
      Events:
        # This defines the API Gateway endpoints that will trigger the Lambda.
        # SAM automatically creates the API and the necessary integration.
        # It's a best practice to define a specific endpoint for each action.
        ListProjectsApi:
          Type: Api
          Properties:
            Path: /projects
            Method: GET
        CreateProjectApi:
          Type: Api
          Properties:
            Path: /projects
            Method: POST
        GetProjectApi:
          Type: Api
          Properties:
            Path: /projects/{projectId}
            Method: GET
        UpdateProjectApi:
          Type: Api
          Properties:
            Path: /projects/{projectId}
            Method: PUT
        DeleteProjectApi:
          Type: Api
          Properties:
            Path: /projects/{projectId}
            Method: DELETE

  # -------------------------------------------------------------------
  # DynamoDB Table
  # -------------------------------------------------------------------
  ProjectsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ProjectTrackerProjects
      AttributeDefinitions:
        - AttributeName: "projectId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "projectId"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

Outputs:
  # The URL for the API Gateway endpoint.
  ApiUrl:
    Description: The URL for the Project Tracker API.
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
